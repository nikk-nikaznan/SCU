# Tox (http://tox.testrun.org/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.

[tox]
isolated_build = true
envlist =
    py310, py311
    # always keep coverage-clean first
    coverage-clean
    # code linters/stylers
    ; lint
    ; manifest
    flake8
    ; pyroma
    # documentation linters/checkers
    readme
    # the actual tests
    doctests
    py
    integration
    treon
    # always keep coverage-report last
    coverage-report
    # setup tasks
    setup

; [testenv]
; deps =
;     torch
;     lightning
;     numpy
;     scikit-learn
;     matplotlib
;     mlflow
;     class_resolver
; commands =
;     pytest

; [testenv:lint]
; description = Run linters
; deps =
;     black
;     isort
; commands =
;     black --check .
;     isort --check-only .


; [testenv:coverage-clean]
; deps = coverage
; skip_install = true
; commands = coverage erase

; [testenv:manifest]
; deps = check-manifest
; skip_install = true
; commands = check-manifest

; [testenv:doclint]
; deps =
;     rstfmt
; skip_install = true
; commands =
;     rstfmt \
;         docs/source/tutorial/node_piece.rst \
;         docs/source/tutorial/troubleshooting.rst
; description = Run documentation linters.

; [testenv:flake8]
; skip_install = true
; deps =
;     black
;     darglint
;     flake8<5.0.0
;     # flake8-bandit
;     flake8-black
;     flake8-bugbear
;     flake8-colors
;     flake8-docstrings<1.6
;     flake8-isort==5.0.0
;     flake8-print
;     pep8-naming
;     pydocstyle
; commands =
;     flake8 src/ tests/
; description = Run the flake8 tool with several plugins (bandit, docstrings, import order, pep8 naming).

; [testenv:docstr-coverage]
; skip_install = true
; deps =
;     docstr-coverage
; commands =
;     docstr-coverage --skip-private --skip-magic src
; description = Run the docstr-coverage tool to check documentation coverage

; [testenv:mypy]
; deps =
;     mypy
; skip_install = true
; commands = mypy --install-types --non-interactive --ignore-missing-imports src
; description = Run the mypy tool to check static typing on the project.

; [testenv:pyroma]
; deps =
;     pygments
;     pyroma
; skip_install = true
; commands = pyroma --min=9 .
; description = Run the pyroma tool to check the package friendliness of the project.

; [testenv:readme]
; commands = python setup.py check -r -s
; skip_install = true
; description = Make sure readme has been updated properly

; [testenv:coverage-report]
; deps = coverage
; skip_install = true
; commands =
;     coverage combine
;     coverage report


; [gh-actions]
; python =
;     3.10: py310, lint, format
;     3.11: py311, lint, format

; [gh-actions:env]
; COVERAGE_FILE = .coverage.{envname}

[flake8]
max-line-length = 120
